name: Publish to PyPI

on:
  workflow_dispatch:  # Allow manual trigger
  push:
    tags:
      - 'v*'  # Run on version tags

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Extract version from tag
        id: get_version
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Verify version match
        run: |
          # Get version from pyproject.toml
          TOML_VERSION=$(grep -oP 'version = "\K[^"]+' pyproject.toml)
          echo "Version in pyproject.toml: $TOML_VERSION"
          echo "Version from tag: $VERSION"
          
          # Verify versions match
          if [ "$TOML_VERSION" != "$VERSION" ]; then
            echo "::warning::Version in tag ($VERSION) does not match version in pyproject.toml ($TOML_VERSION)"
            echo "::warning::It is recommended to use the 'Bump Version' workflow before creating a tag"
          fi
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Install dependencies
        run: |
          poetry install
      
      - name: Run tests
        run: |
          poetry run python -m spacy download en_core_web_sm
          poetry run pytest tests/
      
      - name: Build package
        run: |
          poetry build
      
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          # If you're using TestPyPI first, uncomment the following:
          # repository-url: https://test.pypi.org/legacy/
          # password: ${{ secrets.TEST_PYPI_API_TOKEN }} 